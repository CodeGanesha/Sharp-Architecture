//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

namespace SharpArch.Specifications
{
    using System;

    using global::SharpArch.Domain.DomainModel;
    using global::SharpArch.NHibernate.NHibernateValidator;

    [HasUniqueDomainSignature]
    class Contractor : Entity
    {
        [DomainSignature]
        public virtual string Name { get; set; }
    }

    [HasUniqueDomainSignatureWithGuidId]
    class ObjectWithGuidId : EntityWithTypedId<Guid>
    {
        [DomainSignature]
        public virtual string Name { get; set; }
    }

    [HasUniqueDomainSignature]
    class ObjectWithStringIdAndValidatorForIntId : EntityWithTypedId<string>
    {
        [DomainSignature]
        public virtual string Name { get; set; }
    }

    [HasUniqueDomainSignatureWithStringId]
    class User : EntityWithTypedId<string>
    {
        public User(string id, string SSN)
        {
            this.Id = id;
            this.SSN = SSN;
        }

        public User()
        {
        }

        [DomainSignature]
        public virtual string SSN { get; set; }
    }

    class EntityWithNoDomainSignatureProperties : EntityWithTypedId<int>
    {
        public virtual string Property1 { get; set; }

        public virtual int Property2 { get; set; }
    }

    class EntityWithAllPropertiesPartOfDomainSignature : EntityWithTypedId<int>
    {
        [DomainSignature]
        public virtual string Property1 { get; set; }

        [DomainSignature]
        public virtual int Property2 { get; set; }

        [DomainSignature]
        public virtual bool Property3 { get; set; }
    }

    class EntityWithSomePropertiesPartOfDomainSignature : EntityWithTypedId<int>
    {
        [DomainSignature]
        public virtual string Property1 { get; set; }

        public virtual int Property2 { get; set; }

        [DomainSignature]
        public virtual bool Property3 { get; set; }
    }

    class EntityWithAnotherEntityAsPartOfDomainSignature : EntityWithTypedId<int>
    {
        public EntityWithAnotherEntityAsPartOfDomainSignature()
        {
            this.Property2 = new EntityWithAllPropertiesPartOfDomainSignature();
        }

        [DomainSignature]
        public virtual string Property1 { get; set; }

        [DomainSignature]
        public virtual EntityWithAllPropertiesPartOfDomainSignature Property2 { get; set; }
    }
}